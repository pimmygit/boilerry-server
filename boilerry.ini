[DEFAULT]
level = INFO
file = stdout
temperature_recording_interval = 600
port = 9741
max_invalid_requests = 3

[logging]
level = FINEST
file = runtime.log

[database]
type = MySQL
host = localhost
port = 3306
name = boilerry
user = boser
password = S1r3n3

[temperature.sensor]
sensor_1_id = 28-0416a4e258ff
sensor_1_timeout = 30
sensor_2_id =
sensor_2_timeout =
sensor_3_id =
sensor_3_timeout =

[pin.gpio]
# The GPIO pin/port on which the PIR sensor or the relays are connected to
motion_1 = 13
relay_1 = 16
relay_2 = 18

[android.server]
host =
port = 9741
max_invalid_requests = 5

################################################################################
# Below are all the user configurations to the heating system control
# that they can do via the App UI.
################################################################################
[boilerry.server]
# State of the boiler:
#     0 - Off
#     1 - Always On, maintaining the temperature as set in the 'thermostat' table for the period (00:00 to 23:59)
#     2 - Timer On, maintaining the temperature as set in 'thermostat' table, defaulting to period (00:00 to 23:59).
#     3 - Predictive.
thermo_switch = 1

# Temperature units: [F]ahrenheit, or [C]elsuis.
thermo_units = 'C'

# Intervals between temperature recordings in minutes
temperature_recording_interval = 10

# Period of no motion in the property in minutes, that is considered that the occupants are not present.
# The predictive schedule differentiates when people are asleep at night, and not in the property using the time.
motion_period_no_occupants = 30

# The period between each recording of movement in minutes. There is no need to write in the database too often.
# This property in combination with what we observe as `motion_period_no_occupants` can give us accurate enough
# information when a person has left the property.
motion_time_between_writes = 10
